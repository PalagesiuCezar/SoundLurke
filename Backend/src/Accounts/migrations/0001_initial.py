# Generated by Django 2.2.10 on 2020-08-20 21:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='County',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Accounts.Country')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('last_online', models.DateTimeField(default=django.utils.timezone.now, verbose_name='last online')),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, 'Client'), (2, 'Artist'), (3, 'Organizer')])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Organizer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sex', models.CharField(choices=[(1, 'Male'), (2, 'Female'), (3, 'Prefer not to say...')], default='3', max_length=25)),
                ('phone', models.CharField(max_length=31, null=True, verbose_name='phone number')),
                ('music_type', multiselectfield.db.fields.MultiSelectField(choices=[(1, 'Rock'), (2, 'Pop music'), (3, 'Jazz'), (4, 'Folk music'), (5, 'Hip hop music'), (6, 'Blues'), (7, 'Country music'), (8, 'Rhythm and blues'), (9, 'Electronic music'), (10, 'Classical music'), (11, 'Heavy metal'), (12, 'Reggae'), (13, 'Punk rock'), (14, 'Funk'), (15, 'Singing'), (16, 'Soul music'), (17, 'Electronic dance music'), (18, 'Popular music'), (19, 'Pop rock'), (20, 'House music'), (21, 'Orchestra'), (22, 'Disco'), (23, 'Dance music'), (24, 'Alternative rock'), (25, 'World'), (26, 'Musical theatre'), (27, 'Gospel music'), (28, 'Techno'), (29, 'Easy listening'), (30, 'Instrumental'), (31, 'New-age music'), (32, 'Opera'), (33, 'Progressive rock'), (34, 'Trance music'), (35, 'Indie rock'), (36, 'Ambient music'), (37, 'Experimental music'), (38, 'Jazz fusion'), (39, 'Swing music'), (40, 'Hard rock'), (41, 'Avant-garde music'), (42, 'Industrial music'), (43, 'New wave'), (44, 'Dubstep'), (45, 'Emo'), (46, 'Country rock'), (47, 'Electro'), (48, 'Progressive music'), (49, 'Hardcore punk'), (50, 'Religious music'), (51, 'Dance-pop')], max_length=1024, null=True)),
                ('caption', models.TextField(default='', max_length=750)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='images/profile_images_organizer')),
                ('background_picture', models.ImageField(blank=True, null=True, upload_to='images/background_organizer')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Accounts.City')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Accounts.Country')),
                ('county', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Accounts.County')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organizer', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Organizer',
                'verbose_name_plural': 'Organizers',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sex', models.CharField(choices=[(1, 'Male'), (2, 'Female'), (3, 'Prefer not to say...')], default='3', max_length=25)),
                ('phone', models.CharField(max_length=31, null=True, verbose_name='phone number')),
                ('music_type', multiselectfield.db.fields.MultiSelectField(choices=[(1, 'Rock'), (2, 'Pop music'), (3, 'Jazz'), (4, 'Folk music'), (5, 'Hip hop music'), (6, 'Blues'), (7, 'Country music'), (8, 'Rhythm and blues'), (9, 'Electronic music'), (10, 'Classical music'), (11, 'Heavy metal'), (12, 'Reggae'), (13, 'Punk rock'), (14, 'Funk'), (15, 'Singing'), (16, 'Soul music'), (17, 'Electronic dance music'), (18, 'Popular music'), (19, 'Pop rock'), (20, 'House music'), (21, 'Orchestra'), (22, 'Disco'), (23, 'Dance music'), (24, 'Alternative rock'), (25, 'World'), (26, 'Musical theatre'), (27, 'Gospel music'), (28, 'Techno'), (29, 'Easy listening'), (30, 'Instrumental'), (31, 'New-age music'), (32, 'Opera'), (33, 'Progressive rock'), (34, 'Trance music'), (35, 'Indie rock'), (36, 'Ambient music'), (37, 'Experimental music'), (38, 'Jazz fusion'), (39, 'Swing music'), (40, 'Hard rock'), (41, 'Avant-garde music'), (42, 'Industrial music'), (43, 'New wave'), (44, 'Dubstep'), (45, 'Emo'), (46, 'Country rock'), (47, 'Electro'), (48, 'Progressive music'), (49, 'Hardcore punk'), (50, 'Religious music'), (51, 'Dance-pop')], max_length=25)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='images/profile_images_clients')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Accounts.City')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Accounts.Country')),
                ('county', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Accounts.County')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
            },
        ),
        migrations.AddField(
            model_name='city',
            name='county',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Accounts.County'),
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sex', models.CharField(choices=[(1, 'Male'), (2, 'Female'), (3, 'Prefer not to say...')], default='3', max_length=25)),
                ('phone', models.CharField(max_length=31, null=True, verbose_name='phone number')),
                ('music_type', multiselectfield.db.fields.MultiSelectField(choices=[(1, 'Rock'), (2, 'Pop music'), (3, 'Jazz'), (4, 'Folk music'), (5, 'Hip hop music'), (6, 'Blues'), (7, 'Country music'), (8, 'Rhythm and blues'), (9, 'Electronic music'), (10, 'Classical music'), (11, 'Heavy metal'), (12, 'Reggae'), (13, 'Punk rock'), (14, 'Funk'), (15, 'Singing'), (16, 'Soul music'), (17, 'Electronic dance music'), (18, 'Popular music'), (19, 'Pop rock'), (20, 'House music'), (21, 'Orchestra'), (22, 'Disco'), (23, 'Dance music'), (24, 'Alternative rock'), (25, 'World'), (26, 'Musical theatre'), (27, 'Gospel music'), (28, 'Techno'), (29, 'Easy listening'), (30, 'Instrumental'), (31, 'New-age music'), (32, 'Opera'), (33, 'Progressive rock'), (34, 'Trance music'), (35, 'Indie rock'), (36, 'Ambient music'), (37, 'Experimental music'), (38, 'Jazz fusion'), (39, 'Swing music'), (40, 'Hard rock'), (41, 'Avant-garde music'), (42, 'Industrial music'), (43, 'New wave'), (44, 'Dubstep'), (45, 'Emo'), (46, 'Country rock'), (47, 'Electro'), (48, 'Progressive music'), (49, 'Hardcore punk'), (50, 'Religious music'), (51, 'Dance-pop')], max_length=1024)),
                ('music_type_artist', models.CharField(choices=[(1, 'Rock'), (2, 'Pop music'), (3, 'Jazz'), (4, 'Folk music'), (5, 'Hip hop music'), (6, 'Blues'), (7, 'Country music'), (8, 'Rhythm and blues'), (9, 'Electronic music'), (10, 'Classical music'), (11, 'Heavy metal'), (12, 'Reggae'), (13, 'Punk rock'), (14, 'Funk'), (15, 'Singing'), (16, 'Soul music'), (17, 'Electronic dance music'), (18, 'Popular music'), (19, 'Pop rock'), (20, 'House music'), (21, 'Orchestra'), (22, 'Disco'), (23, 'Dance music'), (24, 'Alternative rock'), (25, 'World'), (26, 'Musical theatre'), (27, 'Gospel music'), (28, 'Techno'), (29, 'Easy listening'), (30, 'Instrumental'), (31, 'New-age music'), (32, 'Opera'), (33, 'Progressive rock'), (34, 'Trance music'), (35, 'Indie rock'), (36, 'Ambient music'), (37, 'Experimental music'), (38, 'Jazz fusion'), (39, 'Swing music'), (40, 'Hard rock'), (41, 'Avant-garde music'), (42, 'Industrial music'), (43, 'New wave'), (44, 'Dubstep'), (45, 'Emo'), (46, 'Country rock'), (47, 'Electro'), (48, 'Progressive music'), (49, 'Hardcore punk'), (50, 'Religious music'), (51, 'Dance-pop')], max_length=25)),
                ('merch_link', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('caption', models.TextField(blank=True, default='', max_length=750)),
                ('social_media_bio', models.TextField(blank=True, default='', max_length=250, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='images/profile_images_artist')),
                ('background_picture', models.ImageField(blank=True, null=True, upload_to='images/background_artist')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Accounts.City')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Accounts.Country')),
                ('county', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Accounts.County')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artist', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Artist',
                'verbose_name_plural': 'Artists',
            },
        ),
    ]
